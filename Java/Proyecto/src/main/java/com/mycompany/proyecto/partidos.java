/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author usuario
 */
public class partidos extends javax.swing.JFrame {

    /**
     * Creates new form partidos
     */
    public partidos() {
        initComponents();

        //generamos automaticamente cuando inicie el programa los metodos de locV y de Confbox para tener valores predeterminados
        ActionEvent evt = new ActionEvent(LocV, WIDTH, equipo);

        LocVActionPerformed(evt);
        ConfboxActionPerformed(evt);
        equiposBoxActionPerformed(evt);
        generartemps();
        TemporadaIActionPerformed(evt);
        TemporadaFActionPerformed(evt);

    }

    String localvisit;
    String conf;
    String equipo = "";
    String tempI;
    String tempF;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu = new javax.swing.JPopupMenu();
        Create = new javax.swing.JMenuItem();
        Update = new javax.swing.JMenuItem();
        Delete = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaconsulta = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        alLio = new javax.swing.JButton();
        LocV = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Confbox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        equiposBox = new javax.swing.JComboBox<>();
        CcolorjButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TemporadaI = new javax.swing.JComboBox<>();
        TemporadaF = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MediaPLocal = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TotPartidos = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        MediaPVisit = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TotPLocal = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TotPVisit = new javax.swing.JTextArea();

        Create.setText("Create");
        Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateActionPerformed(evt);
            }
        });
        jPopupMenu.add(Create);

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPopupMenu.add(Update);

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPopupMenu.add(Delete);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setToolTipText("");

        jButton2.setText("Configuraci√≥n");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        tablaconsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Equipo Local", "Equipo Visitante", "Puntos Local", "Puntos Visitante", "Temporada"
            }
        ));
        tablaconsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaconsultaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                none(evt);
            }
        });
        jScrollPane1.setViewportView(tablaconsulta);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Equipo");

        alLio.setText("Ejecutar consulta");
        alLio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alLioActionPerformed(evt);
            }
        });

        LocV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Local", "Visitante" }));
        LocV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocVActionPerformed(evt);
            }
        });

        jLabel2.setText("Conferencia");

        Confbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "East", "West" }));
        Confbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfboxActionPerformed(evt);
            }
        });

        jLabel3.setText("Equipos");

        equiposBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "76ers" }));
        equiposBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equiposBoxActionPerformed(evt);
            }
        });

        CcolorjButton.setText("Cambiar colores");
        CcolorjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CcolorjButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Temporada Final");

        jLabel5.setText("Temporada Inicial");

        TemporadaI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TemporadaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemporadaIActionPerformed(evt);
            }
        });

        TemporadaF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TemporadaF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemporadaFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LocV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Confbox, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equiposBox, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TemporadaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TemporadaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(alLio)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CcolorjButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CcolorjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alLio)
                    .addComponent(jLabel1)
                    .addComponent(LocV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(Confbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(equiposBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TemporadaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(TemporadaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel6.setText("Total Partidos");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        MediaPLocal.setColumns(20);
        MediaPLocal.setRows(5);
        jScrollPane2.setViewportView(MediaPLocal);

        jLabel7.setText("Media Puntos locales");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        TotPartidos.setColumns(20);
        TotPartidos.setRows(5);
        jScrollPane3.setViewportView(TotPartidos);

        jLabel8.setText("Media Puntos Visitantes");

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        MediaPVisit.setColumns(20);
        MediaPVisit.setRows(5);
        jScrollPane4.setViewportView(MediaPVisit);

        jLabel9.setText("Total Puntos locales");

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        TotPLocal.setColumns(20);
        TotPLocal.setRows(5);
        jScrollPane5.setViewportView(TotPLocal);

        jLabel10.setText("Total Puntos Visitantes");

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        TotPVisit.setColumns(20);
        TotPVisit.setRows(5);
        jScrollPane6.setViewportView(TotPVisit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private double mediaList(int col) {
        TableModel model = tablaconsulta.getModel();
        int rowCount = model.getRowCount();

        int total = 0;

        for (int row = 0; row < rowCount; row++) {
            Object value = model.getValueAt(row, col);

            total += Integer.parseInt(value+"");
        }

        double media = (total/tablaconsulta.getRowCount());

        return media;
    }
    
    private int totList(int col)
    {
        TableModel model = tablaconsulta.getModel();
        int rowCount = model.getRowCount();

        int total = 0;

        for (int row = 0; row < rowCount; row++) {
            Object value = model.getValueAt(row, col);

            total += Integer.parseInt(value+"");
        }


        return total;
    }


    private void LocVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocVActionPerformed
        // TODO add your handling code here: 

        System.out.println("");
        localvisit = LocV.getSelectedItem().toString();
    }//GEN-LAST:event_LocVActionPerformed

    private void ConfboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfboxActionPerformed
        // TODO add your handling code here:
        conf = Confbox.getSelectedItem().toString();

        Connection con; //declaramos las variables necesarias.
        Statement sentencia;
        String sql;
        ResultSet rs;
        //Recogemos la informaci√≥n de confi
        String ip = "";
        String usuario = "";
        String contrase√±a = "";
        String Driver = "";
        String Puerto = "";
        String bdd = "";
        try (ObjectInputStream flujoEntrada = new ObjectInputStream(new FileInputStream("src\\main\\java\\com\\mycompany\\proyecto\\config.ini")) {
        }) {

            try {
                ip = (String) flujoEntrada.readObject();
                usuario = (String) flujoEntrada.readObject();
                contrase√±a = (String) flujoEntrada.readObject();
                Driver = (String) flujoEntrada.readObject();
                Puerto = (String) flujoEntrada.readObject();
                bdd = (String) flujoEntrada.readObject();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException e) {
            System.out.println(e);
        }

        String url = "jdbc:mysql://" + ip + ":" + Puerto + "/" + bdd;

        List<String> equipos_conf = new ArrayList<>();
        if (conf.equals("East")) {

            try {
                con = DriverManager.getConnection(url, usuario, contrase√±a);

                sql = "SELECT nombre FROM equipos WHERE conferencia = 'East'";
                sentencia = (Statement) con.createStatement();
                rs = sentencia.executeQuery(sql);

                while (rs.next()) {
                    String a = rs.getString("nombre");
                    equipos_conf.add(a);
                }
            } catch (SQLException e) {
                Logger.getLogger(Proyecto.class.getName()).log(Level.SEVERE, null, e);
            }

            String wiiii[] = equipos_conf.toArray(new String[0]);

            DefaultComboBoxModel e = new DefaultComboBoxModel(wiiii);

            equiposBox.setModel(e);

        } else {
            try {
                con = DriverManager.getConnection(url, usuario, contrase√±a);

                sql = "SELECT nombre FROM equipos WHERE conferencia = 'West'";
                sentencia = (Statement) con.createStatement();
                rs = sentencia.executeQuery(sql);

                while (rs.next()) {
                    String a = rs.getString("nombre");
                    equipos_conf.add(a);
                }
            } catch (SQLException e) {
                Logger.getLogger(Proyecto.class.getName()).log(Level.SEVERE, null, e);
            }

            String wiiii[] = equipos_conf.toArray(new String[0]);

            DefaultComboBoxModel e = new DefaultComboBoxModel(wiiii);

            equiposBox.setModel(e);
        }


    }//GEN-LAST:event_ConfboxActionPerformed

    private void equiposBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equiposBoxActionPerformed
        // TODO add your handling code here:
        equipo = equiposBox.getSelectedItem().toString();
    }//GEN-LAST:event_equiposBoxActionPerformed

    //Consulta select
    private void alLioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alLioActionPerformed
        // TODO add your handling code here:
        String equipo = equiposBox.getSelectedItem().toString();
        Connection con; //declaramos las variables necesarias.
        Statement sentencia;
        String sql;
        ResultSet rs;
        //Recogemos la informaci√≥n de confi y nos conectamos a la base de datos
        String ip = "";
        String usuario = "";
        String contrase√±a = "";
        String Driver = "";
        String Puerto = "";
        String bdd = "";
        try (ObjectInputStream flujoEntrada = new ObjectInputStream(new FileInputStream("src\\main\\java\\com\\mycompany\\proyecto\\config.ini")) {
        }) {

            try {
                ip = (String) flujoEntrada.readObject();
                usuario = (String) flujoEntrada.readObject();
                contrase√±a = (String) flujoEntrada.readObject();
                Driver = (String) flujoEntrada.readObject();
                Puerto = (String) flujoEntrada.readObject();
                bdd = (String) flujoEntrada.readObject();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException e) {
            System.out.println(e);
        }

        String url = "jdbc:mysql://" + ip + ":" + Puerto + "/" + bdd;

        //generamos la consulta select
        try {

            //lo pedido en cuestion
            con = DriverManager.getConnection(url, usuario, contrase√±a);
            if (tempF.equals(tempI)) {
                sql = "SELECT * FROM partidos WHERE equipo_" + this.localvisit + "='" + this.equipo + "' AND temporada='" + tempI + "';";
            } else {

                if (tempI.charAt(0) == '9' && tempF.charAt(0) != '9') {
                    //codigo de alejandro
                    String temp[];

                    temp = tempI.split("/");
                    int inicio = Integer.parseInt(temp[0]) % 100;

                    temp = tempF.split("/");
                    //aqu√≠ se encuentra el peque√±o cambio
                    int fin = (Integer.parseInt(temp[0]) + 1) % 100;

                    String sqlIn = "in ('";

                    int anyoInicioTemporada = inicio;

                    while (anyoInicioTemporada != fin) {
                        int anyoFinTemporada = (inicio + 1) % 100;

                        String cadena[] = new String[2];

                        cadena[0] = "" + anyoInicioTemporada;
                        if (anyoInicioTemporada < 9) {
                            cadena[0] = "0" + cadena[0];
                        }

                        cadena[1] = "" + anyoFinTemporada;
                        if (anyoFinTemporada < 9) {
                            cadena[1] = "0" + cadena[1];
                        }

                        sqlIn = sqlIn + "" + cadena[0] + "/" + cadena[1] + "','";

                        inicio++;
                        anyoInicioTemporada = inicio % 100;
                    }

                    sqlIn = sqlIn.substring(0, sqlIn.length() - 2);

                    sqlIn = sqlIn + ")";

                    sql = "SELECT * FROM partidos WHERE equipo_" + this.localvisit + "='" + this.equipo + "' AND temporada " + sqlIn + ";";
                } else {
                    sql = "SELECT * FROM partidos WHERE equipo_" + this.localvisit + "='" + this.equipo + "' AND temporada BETWEEN '" + tempI + "' AND '" + tempF + "';";
                }
            }

            System.out.println(sql);
            //sql = "SELECT * FROM partidos WHERE equipo_local = 'Raptors';";
            sentencia = (Statement) con.createStatement();

            rs = sentencia.executeQuery(sql);

            DefaultTableModel dfmbuscar = new DefaultTableModel();
            this.tablaconsulta.setModel(dfmbuscar);
            dfmbuscar.setColumnIdentifiers(new Object[]{"codigo", "equipo_local", "equipo_visitante", "puntos_local", "puntos_visitante", "temporada"});

            while (rs.next()) {
                dfmbuscar.addRow(new Object[]{rs.getString("codigo"), rs.getString("equipo_local"), rs.getString("equipo_visitante"), rs.getString("puntos_local"), rs.getString("puntos_visitante"), rs.getString("Temporada")});
            }

            TotPartidos.setText(tablaconsulta.getRowCount() + "");

            //Aqu√≠ pasamos los valores de la columna puntos local
            MediaPLocal.setText(mediaList(3) + "");
            MediaPVisit.setText(mediaList(4) + "");
            
            TotPLocal.setText(totList(3)+"");
            TotPVisit.setText(totList(4)+"");

        } catch (SQLException e) {
            Logger.getLogger(Proyecto.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_alLioActionPerformed

    private void CcolorjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CcolorjButtonActionPerformed
        // TODO add your handling code here:
        JColorChooser chooser = new JColorChooser();
        Color colorPar = JColorChooser.showDialog(chooser, "Elige el color par", Color.BLACK);
        Color colorImpar = JColorChooser.showDialog(chooser, "Elige el color impar", Color.BLACK);

        MiRenderer colorear = new MiRenderer(colorPar, colorImpar);
        tablaconsulta.setDefaultRenderer(Object.class, colorear);
    }//GEN-LAST:event_CcolorjButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Formulario form = new Formulario();
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void none(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_none
        // TODO add your handling code here:
        jPopupMenu.setVisible(true);
    }//GEN-LAST:event_none

    private void tablaconsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaconsultaMouseClicked
        // TODO add your handling code here:
        if (SwingUtilities.isRightMouseButton(evt)) {
            int row = tablaconsulta.rowAtPoint(evt.getPoint());
            tablaconsulta.setRowSelectionInterval(row, row);

            jPopupMenu.show(tablaconsulta, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tablaconsultaMouseClicked

    private void CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateActionPerformed
        // TODO add your handling code here:
        createdialog cd = new createdialog(this, rootPaneCheckingEnabled);

        cd.setVisible(rootPaneCheckingEnabled);

        alLioActionPerformed(evt);
        generartemps();
    }//GEN-LAST:event_CreateActionPerformed

    public void llamarCreate() {
        ActionEvent evt = null;
        CreateActionPerformed(evt);
    }

    public void holawenas() {
        System.out.println("hola wenas");
    }

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        int fila = tablaconsulta.getSelectedRow();

        int codigo = Integer.parseInt(this.tablaconsulta.getValueAt(fila, 0).toString());
        String equipoL = this.tablaconsulta.getValueAt(fila, 1).toString();
        String equipoV = this.tablaconsulta.getValueAt(fila, 2).toString();
        int puntosL = Integer.parseInt(this.tablaconsulta.getValueAt(fila, 3).toString());
        int puntosV = Integer.parseInt(this.tablaconsulta.getValueAt(fila, 4).toString());
        String temporada = this.tablaconsulta.getValueAt(fila, 5).toString();;

        Connection con; //declaramos las variables necesarias.
        Statement sentencia;
        String sql;
        ResultSet rs;
        //Recogemos la informaci√≥n de confi
        String ip = "";
        String usuario = "";
        String contrase√±a = "";
        String Driver = "";
        String Puerto = "";
        String bdd = "";
        try (ObjectInputStream flujoEntrada = new ObjectInputStream(new FileInputStream("src\\main\\java\\com\\mycompany\\proyecto\\config.ini")) {
        }) {

            try {
                ip = (String) flujoEntrada.readObject();
                usuario = (String) flujoEntrada.readObject();
                contrase√±a = (String) flujoEntrada.readObject();
                Driver = (String) flujoEntrada.readObject();
                Puerto = (String) flujoEntrada.readObject();
                bdd = (String) flujoEntrada.readObject();

            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
            generartemps();
        } catch (IOException e) {
            System.out.println(e);
        }

        String url = "jdbc:mysql://" + ip + ":" + Puerto + "/" + bdd;

        try {

            //lo pedido en cuestion
            con = DriverManager.getConnection(url, usuario, contrase√±a);

            sql = "UPDATE partidos SET equipo_local = '" + equipoL + "', equipo_visitante='" + equipoV + "', puntos_local = " + puntosL + ", puntos_visitante= " + puntosV + ", temporada= '" + temporada + "'"
                    + " WHERE codigo = " + codigo + ";";

            System.out.println(sql);
            //sql = "SELECT * FROM partidos WHERE equipo_local = 'Raptors';";
            sentencia = (Statement) con.createStatement();
            sentencia.executeUpdate(sql);
            
            alLioActionPerformed(evt);

        } catch (SQLException e) {
            Logger.getLogger(Proyecto.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int fila = tablaconsulta.getSelectedRow();
        String codigo = tablaconsulta.getValueAt(fila, 0).toString();

        Connection con; //declaramos las variables necesarias.
        Statement sentencia;
        String sql;
        ResultSet rs;
        //Recogemos la informaci√≥n de confi
        String ip = "";
        String usuario = "";
        String contrase√±a = "";
        String Driver = "";
        String Puerto = "";
        String bdd = "";
        try (ObjectInputStream flujoEntrada = new ObjectInputStream(new FileInputStream("src\\main\\java\\com\\mycompany\\proyecto\\config.ini")) {
        }) {

            try {
                ip = (String) flujoEntrada.readObject();
                usuario = (String) flujoEntrada.readObject();
                contrase√±a = (String) flujoEntrada.readObject();
                Driver = (String) flujoEntrada.readObject();
                Puerto = (String) flujoEntrada.readObject();
                bdd = (String) flujoEntrada.readObject();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException e) {
            System.out.println(e);
        }

        String url = "jdbc:mysql://" + ip + ":" + Puerto + "/" + bdd;

        try {

            //lo pedido en cuestion
            con = DriverManager.getConnection(url, usuario, contrase√±a);

            sql = "DELETE FROM partidos WHERE codigo = " + codigo + ";";

            System.out.println(sql);
            //sql = "SELECT * FROM partidos WHERE equipo_local = 'Raptors';";
            sentencia = (Statement) con.createStatement();
            sentencia.executeUpdate(sql);

            alLioActionPerformed(evt);
            generartemps();

        } catch (SQLException e) {
            Logger.getLogger(Proyecto.class.getName()).log(Level.SEVERE, null, e);
        }


    }//GEN-LAST:event_DeleteActionPerformed

    private void TemporadaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemporadaIActionPerformed
        // TODO add your handling code here:

        tempI = TemporadaI.getSelectedItem().toString();


    }//GEN-LAST:event_TemporadaIActionPerformed

    private void TemporadaFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemporadaFActionPerformed
        // TODO add your handling code here:
        tempF = TemporadaF.getSelectedItem().toString();
    }//GEN-LAST:event_TemporadaFActionPerformed

    private void generartemps() {
        Connection con; //declaramos las variables necesarias.
        Statement sentencia;
        String sql;
        ResultSet rs;
        //Recogemos la informaci√≥n de confi
        String ip = "";
        String usuario = "";
        String contrase√±a = "";
        String Driver = "";
        String Puerto = "";
        String bdd = "";
        try (ObjectInputStream flujoEntrada = new ObjectInputStream(new FileInputStream("src\\main\\java\\com\\mycompany\\proyecto\\config.ini")) {
        }) {

            try {
                ip = (String) flujoEntrada.readObject();
                usuario = (String) flujoEntrada.readObject();
                contrase√±a = (String) flujoEntrada.readObject();
                Driver = (String) flujoEntrada.readObject();
                Puerto = (String) flujoEntrada.readObject();
                bdd = (String) flujoEntrada.readObject();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException e) {
            System.out.println(e);
        }

        String url = "jdbc:mysql://" + ip + ":" + Puerto + "/" + bdd;

        List<String> equipos_conf = new ArrayList<>();

        try {
            con = DriverManager.getConnection(url, usuario, contrase√±a);

            sql = "SELECT DISTINCT temporada FROM partidos";
            sentencia = (Statement) con.createStatement();
            rs = sentencia.executeQuery(sql);

            while (rs.next()) {
                String a = rs.getString("temporada");
                equipos_conf.add(a);
            }
        } catch (SQLException e) {
            Logger.getLogger(Proyecto.class.getName()).log(Level.SEVERE, null, e);
        }

        String wiiii[] = equipos_conf.toArray(new String[0]);

        DefaultComboBoxModel i = new DefaultComboBoxModel(wiiii);
        DefaultComboBoxModel f = new DefaultComboBoxModel(wiiii);

        TemporadaI.setModel(i);
        TemporadaF.setModel(f);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new partidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CcolorjButton;
    private javax.swing.JComboBox<String> Confbox;
    private javax.swing.JMenuItem Create;
    private javax.swing.JMenuItem Delete;
    private javax.swing.JComboBox<String> LocV;
    private javax.swing.JTextArea MediaPLocal;
    private javax.swing.JTextArea MediaPVisit;
    private javax.swing.JComboBox<String> TemporadaF;
    private javax.swing.JComboBox<String> TemporadaI;
    private javax.swing.JTextArea TotPLocal;
    private javax.swing.JTextArea TotPVisit;
    private javax.swing.JTextArea TotPartidos;
    private javax.swing.JMenuItem Update;
    private javax.swing.JButton alLio;
    private javax.swing.JComboBox<String> equiposBox;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tablaconsulta;
    // End of variables declaration//GEN-END:variables
}
